package com.example.shorextickets;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import javax.net.ssl.HttpsURLConnection;

import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.*;
import android.view.*;
import android.app.Activity;
import android.content.Intent;

public class DownloadActivity extends Activity{
	EditText etEmail;
	EditText etOrder;   
	
		@Override
	    public void onCreate(Bundle savedInstanceState) {
	        super.onCreate(savedInstanceState);
	        setContentView(R.layout.logscreen);
	        
	        
	        
	        Button searchButton = (Button) findViewById(R.id.buttonSearch);
	        searchButton.setOnClickListener(new View.OnClickListener() {
	            public void onClick(View v) {
	            	URL url;
	            	HttpURLConnection conn;

	            	try{
	            	
	            	url=new URL("http://www.shoreexcursioneer.com/tickets/index.php");

	            	//you need to encode ONLY the values of the parameters
	            	String param="email=" + URLEncoder.encode("nahummartinez@gmail.com","UTF-8")+
	            	"&order="+URLEncoder.encode("217691","UTF-8");

	            	conn=(HttpURLConnection)url.openConnection();
	            	//set the output to true, indicating you are outputting(uploading) POST data
	            	conn.setDoOutput(true);
	            	//once you set the output to true, you don’t really need to set the request method to post, but I’m doing it anyway
	            	conn.setRequestMethod("POST");

	            	//Android documentation suggested that you set the length of the data you are sending to the server, BUT
	            	// do NOT specify this length in the header by using conn.setRequestProperty("Content-Length", length);
	            	//use this instead.
	            	conn.setFixedLengthStreamingMode(param.getBytes().length);
	            	conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
	            	//send the POST out
	            	PrintWriter out = new PrintWriter(conn.getOutputStream());
	            	out.print(param);
	            	out.close();

	            	//build the string to store the response text from the server
	            	String response= "";

	            	//start listening to the stream
	            	Scanner inStream = new Scanner(conn.getInputStream());

	            	//process the stream and store it in StringBuilder
	            	while(inStream.hasNextLine())
	            	response+=(inStream.nextLine());

	            	}
	            	//catch some error
	            	catch(MalformedURLException ex){
	            	Toast.makeText(DownloadActivity.this, ex.toString(), 1 ).show();
	            	}
	            	// and some more
	            	catch(IOException ex){

	            	Toast.makeText(DownloadActivity.this, ex.toString(), 1 ).show();
	            	} 
	        };
	        
	       
	    });}
		
	     
	    @Override
	    protected void onStart() {
	        super.onStart();
	        // The activity is about to become visible.
	    }
	    @Override
	    protected void onResume() {
	        super.onResume();
	        // The activity has become visible (it is now "resumed").
	    }
	    @Override
	    protected void onPause() {
	        super.onPause();
	        // Another activity is taking focus (this activity is about to be "paused").
	    }
	    @Override
	    protected void onStop() {
	        super.onStop();
	        // The activity is no longer visible (it is now "stopped")
	    }
	    @Override
	    protected void onDestroy() {
	        super.onDestroy();
	        // The activity is about to be destroyed.
	    }
	}